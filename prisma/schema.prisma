// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SuperAdministratorWebsite {
  id String @id @default(uuid())
  name String @unique
  email String @unique
  password String
}

model User {
  id String @id @default(uuid())
  namaDepan String
  namaBelakang String
  noHp String? @unique
  email String @unique
  password String
  alamat String?
  kodePos String?
  fotoKTP String?
  status Boolean @default(false)
  metodePembayaran MetodePembayaran[]
  verificationRequest VerificationRequest[]
  transactionAsBuyer Transaction[] @relation("BuyerRelation")
  transactionAsSeller Transaction[] @relation("SellerRelation")
}

model MetodePembayaran {
  id Int @id @default(autoincrement())
  metode String
  nomor String
  atasNama String
  user User @relation(fields: [userId], references: [id])
  userId String
}

model VerificationRequest {
  id Int @id @default(autoincrement())
  status Boolean @default(false)
  user User @relation(fields: [userId], references: [id])
  userId String
}

model Transaction {
  id String @id @default(uuid())
  jenisBarang String?
  deskripsi String
  hargaProduk Float
  ongkosKirim Float
  biayaAdmin Float
  totalHarga Float
  buktiPembayaran String?
  buktiPengiriman String?
  nomorResi String?
  Link String @unique
  status String?
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  buyer User? @relation(name: "BuyerRelation", fields: [buyerId], references: [id])
  buyerId String?
  seller User? @relation(name: "SellerRelation", fields: [sellerId], references: [id])
  sellerId String?
}

